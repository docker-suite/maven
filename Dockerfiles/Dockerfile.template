FROM {{BASE_IMAGE}}

LABEL maintainer="Hexosse <hexosse@gmail.com>" \
    org.opencontainers.image.title="docker-suite dsuite/maven:{{MAVEN_VERSION}} image" \
    org.opencontainers.image.description="A maven docker image built on top of the latest Alpine base container" \
    org.opencontainers.image.authors="Hexosse <hexosse@gmail.com>" \
    org.opencontainers.image.vendor="docker-suite" \
    org.opencontainers.image.licenses="MIT" \
    org.opencontainers.image.url="https://github.com/docker-suite/maven" \
    org.opencontainers.image.source="https://github.com/docker-suite/maven" \
    org.opencontainers.image.documentation="https://github.com/docker-suite/maven/blob/master/Readme.md" \
    org.opencontainers.image.created="{{DOCKER_IMAGE_CREATED}}" \
    org.opencontainers.image.revision="{{DOCKER_IMAGE_REVISION}}"

## Make sure this use an alpine base image
RUN [ -f /etc/alpine-release ]

## Build args
ARG USER_HOME_DIR="/root"
ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/{{MAVEN_VERSION}}/binaries

## Environments variables
ENV MAVEN_VERSION {{MAVEN_VERSION}}
ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

## Install Maven
RUN \
	# Print executed commands
	set -x \
    # Update repository indexes
    && apk update \
    # Install mandatory packages
    && apk add --no-cache curl tar bash procps \
    # Prepare folders
    && mkdir -p ${MAVEN_HOME} ${MAVEN_HOME}/ref \
    # Download and install maven
    && curl -fsSL -o /tmp/apache-maven.tar.gz https://apache.osuosl.org/maven/maven-3/{{MAVEN_VERSION}}/binaries/apache-maven-{{MAVEN_VERSION}}-bin.tar.gz \
    && tar -xzf /tmp/apache-maven.tar.gz -C ${MAVEN_HOME} --strip-components=1 \
    && rm -f /tmp/apache-maven.tar.gz \
    && ln -s ${MAVEN_HOME}/bin/mvn /usr/bin/mvn


## Default user
ARG MAVEN_USER="maven"
ARG MAVEN_UID=1000
ARG MAVEN_GROUP="maven"
ARG MAVEN_GID=1000

## Create maven user
RUN \
	# Print executed commands
	set -x \
    # Ensure maven user exists
    && addgroup -g $MAVEN_GID -S $MAVEN_GROUP 2>/dev/null \
    && adduser -u $MAVEN_UID -S -D -s /sbin/nologin -G $MAVEN_GROUP -g $MAVEN_USER $MAVEN_GROUP 2>/dev/null \
    # maven user must be member of sudoers
    && echo "${MAVEN_USER} ALL=(ALL) ALL" >> /etc/sudoers \
    && echo "${MAVEN_USER} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers


## Github token used to install alpine-base
ARG GH_TOKEN

## Make this image an alpine-base image
RUN \
	# Print executed commands
	set -x \
    # Update repository indexes
    && apk update \
    # Download the install alpine-base
    && curl -s -o /tmp/install-base.sh https://raw.githubusercontent.com/docker-suite/Install-Scripts/master/alpine-base/install-base.sh \
    && sh /tmp/install-base.sh \
    # Install git and openssh
    && apk-install --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ \
        git \
        make \
        openssh \
    # Install sudo
    && apk-install --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ \
        sudo \
	# Clear apk's cache
	&& apk-cleanup

## Copy folders
COPY rootfs /

## Make entrypoint script accessible and executable
RUN chmod 0755 /entrypoint.sh && chmod 0755 /usr/local/sbin/mvn-entrypoint.sh

## Entrypoint
ENTRYPOINT ["/entrypoint.sh"]

## Default command
CMD ["mvn"]
